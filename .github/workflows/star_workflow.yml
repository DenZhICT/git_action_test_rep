name: Example of workflow with Vault

on:
  push:
    branches: 
      'master'
  pull_request:
    branches:
      'master'

env:
  python_version: '3.12'

permissions:
  contents: read

jobs:

  build:
    runs-on: ubuntu-latest
    env:
      server_path: ./project/src/server.py
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Setup Python ${{env.python_version}}
        uses: actions/setup-python@v5
        with:
          python-version: ${{env.python_version}}
      - name: Build server
        run: python $server_path &

  test:
    needs: build
    runs-on: ubuntu-latest
    env:
        test_path: ./project/test/test_server.py
        requirements_path: ./requirements.txt
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Setup Python ${{env.python_version}}
        uses: actions/setup-python@v5
        with:
          python-version: ${{env.python_version}}
      - name: Setup needed environment
        run: pip install -r $requirements_path
      - name: Setup HCP
        run: |
          sudo apt-get update &&
          sudo apt-get install gpg coreutils
          curl -fsSL https://apt.releases.hashicorp.com/gpg | sudo gpg --dearmor -o /usr/share/keyrings/hashicorp-archive-keyring.gpg
          echo "deb [signed-by=/usr/share/keyrings/hashicorp-archive-keyring.gpg] https://apt.releases.hashicorp.com $(lsb_release -cs) main" | sudo tee /etc/apt/sources.list.d/hashicorp.list
          sudo apt update && sudo apt install hcp -y
      - name: Get Secret
        run: |
          export HCP_CLIENT_ID=${{secrets.HCP_CLIENT_ID}}
          export HCP_CLIENT_SECRET=${{secrets.HCP_CLIENT_SECRET}}
          export APP_NAME=$app_name
          hcp profile set vault-secrets/app $APP_NAME
          hcp auth login
          PASSWORD=$(hcp vault-secrets run env | grep VAULT_SECRET | cut -d '=' -f 2)
          echo "::add-mask::$PASSWORD"
          echo PASSWORD=$PASSWORD >> $GITHUB_ENV
      - name: Testing Server
        run: INPUT_PASSWORD=${{env.PASSWORD}} pytest $test_path
          
  deploy:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Project deployment
        run: |
          echo Deploying the project...
          echo Project was deployed!
